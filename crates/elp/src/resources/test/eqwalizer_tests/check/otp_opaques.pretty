error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/otp_opaques.erl:18:5
   │
18 │     gb_sets:from_list(Atoms).
   │     ^^^^^^^^^^^^^^^^^^^^^^^^
   │     │
   │     gb_sets:from_list(Atoms).
Expression has type:   gb_sets:set(atom())
Context expected type: gb_sets:set(number())
   │     

Because in the expression's type:
  Opaque gb_sets:set/1(
    Here the type is:     atom()
    Context expects type: number()
  )

------------------------------ Detailed message ------------------------------

  opaque gb_sets:set(atom()) is not compatible with opaque gb_sets:set(number())
  because
  atom() is not compatible with number()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/otp_opaques.erl:42:5
   │
42 │     List.
   │     ^^^^
   │     │
   │     List.
Expression has type:   [[A]]
Context expected type: [A]
   │     

Because in the expression's type:
  [
    Here the type is:     [A]
    Context expects type: A
  ]

------------------------------ Detailed message ------------------------------

  [[A]] is not compatible with [A]
  because
  [A] is not compatible with A

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/otp_opaques.erl:93:14
   │
93 │         1 -> gb_sets:new();
   │              ^^^^^^^^^^^^^
   │              │
   │              gb_sets:new().
Expression has type:   gb_sets:set(none())
Context expected type: {term(), term()} | 'a'
   │              

Because in the expression's type:
  Here the type is:     opaque gb_sets:set(none())
  Context expects type: {term(), term()} | 'a'
  No candidate matches in the expected union.

------------------------------ Detailed message ------------------------------

  opaque gb_sets:set(none()) is not compatible with {term(), term()} | 'a'
  because
  opaque gb_sets:set(none()) is not compatible with {term(), term()}

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/otp_opaques.erl:99:17
   │
99 │ test3_neg(X) -> X.
   │                 ^
   │                 │
   │                 X.
Expression has type:   maps:iterator('k', 'v')
Context expected type: sets:set('a')
   │                 

Because in the expression's type:
  Here the type is:     opaque maps:iterator('k', 'v')
  Context expects type: opaque sets:set('a')

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/otp_opaques.erl:102:13
    │
102 │ ts(X, X) -> X.
    │             ^ X.
Expression has type:   opaque sets:set('a')
Context expected type: T

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/otp_opaques.erl:107:11
    │
107 │     ts(X, X),
    │           ^
    │           │
    │           X.
Expression has type:   maps:iterator('k', 'v')
Context expected type: sets:set('a')
    │           

Because in the expression's type:
  Here the type is:     opaque maps:iterator('k', 'v')
  Context expects type: opaque sets:set('a')

error: expected_fun_type (See https://fb.me/eqwalizer_errors#expected_fun_type)
    ┌─ check/src/otp_opaques.erl:124:5
    │
124 │     X().
    │     ^ X.
Expected fun type with arity 0
Got: maps:iterator('k', 'v') | sets:set('a')

error: expected_fun_type (See https://fb.me/eqwalizer_errors#expected_fun_type)
    ┌─ check/src/otp_opaques.erl:130:5
    │
130 │     X().
    │     ^ X.
Expected fun type with arity 0
Got: sets:set('a')

8 ERRORS
