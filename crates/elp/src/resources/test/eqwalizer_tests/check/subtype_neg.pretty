error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:17:11
   │
17 │ f01(X) -> X.
   │           ^ X.
Expression has type:   term()
Context expected type: {A, A}

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:20:11
   │
20 │ f02(X) -> X.
   │           ^ X.
Expression has type:   term()
Context expected type: atom()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:24:11
   │
24 │ f03(F) -> F.
   │           ^
   │           │
   │           F.
Expression has type:   fun((atom()) -> term())
Context expected type: fun((term()) -> atom())
   │           

  fun((atom()) -> term()) is not compatible with fun((term()) -> atom())
  because
  term() is not compatible with atom()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:27:11
   │
27 │ f04(X) -> X.
   │           ^
   │           │
   │           X.
Expression has type:   'a' | 'b' | 'c'
Context expected type: 'a' | 'b'
   │           

  'a' | 'b' | 'c' is not compatible with 'a' | 'b'
  because
  'c' is not compatible with 'a' | 'b'
  because
  'c' is not compatible with 'a'

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:30:11
   │
30 │ f05(X) -> X.
   │           ^ X.
Expression has type:   'a' | 'b'
Context expected type: none()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:34:11
   │
34 │ f06(X) -> X.
   │           ^
   │           │
   │           X.
Expression has type:   {'a' | 'b', 'a' | 'b'}
Context expected type: {'a', 'b'} | {'b', 'a'}
   │           

  {'a' | 'b', 'a' | 'b'} is not compatible with {'a', 'b'} | {'b', 'a'}
  because
  at tuple index 1:
  {'a' | 'b', 'a' | 'b'} is not compatible with {'a', 'b'}
  because
  'a' | 'b' is not compatible with 'a'
  because
  'b' is not compatible with 'a'

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:38:11
   │
38 │ f07(X) -> X.
   │           ^
   │           │
   │           X.
Expression has type:   pair_ab()
Context expected type: pair_diff_elems()
   │           

  pair_ab() is not compatible with pair_diff_elems()
  because
  {ab(), ab()} is not compatible with pair_diff_elems()
  because
  {ab(), ab()} is not compatible with {'a', 'b'} | {'b', 'a'}
  because
  at tuple index 1:
  {ab(), ab()} is not compatible with {'a', 'b'}

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:41:11
   │
41 │ f08(X) -> X.
   │           ^ X.
Expression has type:   {none(), none()}
Context expected type: none()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:48:13
   │
48 │ map02(M) -> M.
   │             ^
   │             │
   │             M.
Expression has type:   #{a => atom()}
Context expected type: #{a := atom()}
   │             

key `a` is declared as required in the latter but not in the former

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:52:13
   │
52 │ map03(M) -> M.
   │             ^
   │             │
   │             M.
Expression has type:   #{a := atom(), b := atom()}
Context expected type: #{a => atom()}
   │             

key `b` is declared in the former but not in the latter and the latter map has no default association

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:60:13
   │
60 │ map05(M) -> M.
   │             ^
   │             │
   │             M.
Expression has type:   #{'a' | 'b' => 'a' | 'b' | 'c'}
Context expected type: #{a := 'a' | 'b', b => 'a' | 'b'}
   │             

key `a` is declared as required in the latter but not in the former

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:64:13
   │
64 │ map06(M) -> M.
   │             ^
   │             │
   │             M.
Expression has type:   #{term() => number()}
Context expected type: #{atom() => number()}
   │             

  #{term() => number()} is not compatible with #{atom() => number()}
  the default associations are not compatible
  because
  term() is not compatible with atom()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:68:13
   │
68 │ map07(M) -> M.
   │             ^
   │             │
   │             M.
Expression has type:   #{atom() => term()}
Context expected type: #{atom() => number()}
   │             

  #{atom() => term()} is not compatible with #{atom() => number()}
  the default associations are not compatible
  because
  term() is not compatible with number()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:72:13
   │
72 │ map08(M) -> M.
   │             ^
   │             │
   │             M.
Expression has type:   #{atom() => term()}
Context expected type: #{}
   │             

  #{atom() => term()} is not compatible with #{}
  because
  #{atom() => term()} is not compatible with #{}
  the latter map has no default association while the first map has one

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:79:15
   │
79 │ any_fun(F) -> F.
   │               ^ F.
Expression has type:   term()
Context expected type: fun()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:83:5
   │
83 │     {{}, error}.
   │     ^^^^^^^^^^^
   │     │
   │     {{}, 'error'}.
Expression has type:   {{}, 'error'}
Context expected type: {tuple(), 'ok'}
   │     

  at tuple index 2:
  {{}, 'error'} is not compatible with {tuple(), 'ok'}
  because
  'error' is not compatible with 'ok'

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:87:5
   │
87 │     {[], error}.
   │     ^^^^^^^^^^^
   │     │
   │     {[], 'error'}.
Expression has type:   {[], 'error'}
Context expected type: {[pid()], 'ok'}
   │     

  at tuple index 2:
  {[], 'error'} is not compatible with {[pid()], 'ok'}
  because
  'error' is not compatible with 'ok'

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:91:5
   │
91 │     {[], error}.
   │     ^^^^^^^^^^^
   │     │
   │     {[], 'error'}.
Expression has type:   {[], 'error'}
Context expected type: {iolist(), 'ok'}
   │     

  at tuple index 2:
  {[], 'error'} is not compatible with {iolist(), 'ok'}
  because
  'error' is not compatible with 'ok'

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:94:13
   │
94 │ nil_1(L) -> L.
   │             ^ L.
Expression has type:   ['a']
Context expected type: []

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/subtype_neg.erl:97:13
   │
97 │ nil_2(L) -> L.
   │             ^
   │             │
   │             L.
Expression has type:   ['a'] | [none()]
Context expected type: []
   │             

  ['a'] | [none()] is not compatible with []
  because
  ['a'] is not compatible with []

20 ERRORS
